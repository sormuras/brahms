plugins {
    id 'java-library'
    id 'com.gradle.build-scan' version '1.15.1'
    id 'org.shipkit.java' version '2.0.31'
    id 'com.github.sherter.google-java-format' version '0.7.1'
    id 'com.github.ben-manes.versions' version '0.20.0'
}

apply plugin: 'idea'

ext.moduleName = 'de.sormuras.brahms'
description = 'TestEngine ideas'

idea {
    project {
        jdkName = '11'
        languageLevel = '11'
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile "org.junit.platform:junit-platform-engine:${junitPlatformVersion}"

    testCompile "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
}

compileJava {
    options.encoding = 'UTF-8'

    // See: https://docs.oracle.com/en/java/javase/11/tools/javac.html
    options.compilerArgs += [
            '--release', '11', // Compiles against the public, supported and documented API of Java 11.
            '-Xlint',          // Enables all recommended warnings.
            '-Werror'          // Terminates compilation when warnings occur.
    ]
}

javadoc {
    classpath = project.sourceSets.main.compileClasspath
    options {
        memberLevel = JavadocMemberLevel.PROTECTED
        header = project.name
        use = true
        addBooleanOption('Xdoclint:html,syntax', true)
        addBooleanOption('html5', true)
        encoding = 'UTF-8'
        noTimestamp = true
    }
}

jar {
    exclude 'LICENSE' // keep root directory "clean", only `module-info.class` is allowed
    into 'de/sormuras/brahms', { from 'version.properties' }
}

test {
    useJUnitPlatform()
    testLogging {
        events 'passed', 'skipped', 'failed'
        showStandardStreams = false
    }
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}

wrapper {
    gradleVersion = '4.9'
}
